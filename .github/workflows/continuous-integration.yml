name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    paths-ignore:
      - "**.md"
  workflow_dispatch:
    branches:
      - main

jobs:
  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: ⚙️ Install Dependencies
        run: yarn

      - name: 🏗️ Build
        run: yarn build

      - name: 🛡️ CodeQL Analysis
        uses: github/codeql-action/init@v1
        with:
          languages: typescript
      - uses: github/codeql-action/analyze@v1

      - name: 🧪 Test
        run: |
          yarn lint
          yarn test:coverage
        env:
          CI: true

      - name: 🔭 e2e
        run: .github/workflows/e2e.sh

      - name: 📊 Code coverage
        uses: codecov/codecov-action@v1

  publish:
    needs: continuous-integration
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.3
        with:
          registry-url: https://registry.npmjs.org/

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: ⚙️ Install Dependencies
        run: yarn

      - name: 🏗️ Build
        run: yarn build

      - name: 🔖 Configure publish
        run: |
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "${{ github.actor }}"
          mkdir -p /tmp/publish
          cp README.md /tmp/publish/index.md

      - name: 🌐 Publish Github pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: /tmp/publish
          enable_jekyll: true

      - name: 📦 Publish NPM packages
        env:
          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}
        run: yarn lerna publish --conventional-commits --create-release github --yes
